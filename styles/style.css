:root {
    --header-height: 10vh;
    --cell-dimension: 200px;
    --crossline-height: 10px;
    --sqrt--2: 1.4;
}

*, *::before, *::after {
    box-sizing: border-box;
}

h1 {
    margin: 0;
}

body {
    margin: 0;
    font-family: 'Roboto', sans-serif;
    text-transform: uppercase;
    user-select: none;
}

table, tr, td, th {
    margin: 0;
    border: none;
    padding: 0;
}

.header {
    height: 10vh;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
}

.content {
    width: 100vw;
    height: calc(100vh - var(--header-height));
}

.content > * {
    height: 100%;
}

.modal-wrapper {
    background-color: rgba(218, 218, 218, 0.1);
    display: block;
}

.modal-wrapper.hidden, .play-wrapper.hidden {
    display: none;
}

.modal {
    display: flex;
    gap: 5px;
    flex-direction: column;
    padding: 10px 20px;
    max-width: 400px;
    margin: auto;
    padding-top: 15vh;
    font-size: 1.5rem;
}

.submit-btn {
    transition: all 0.08s;
    background-color:rgb(245, 245, 245)
}

.submit-btn:active {
    background-color: rgb(228, 228, 228);
}

label {
    color: rgb(90, 90, 90);
}

input {
    outline: none;
    box-shadow: inset 1px 1px rgb(223, 223, 223);
    padding: 5px 0 3px 5px;
    text-transform: uppercase;
    font-size: 1.2rem;
}

input, button {
    border: none;
}

.submit-btn {
    margin-top: 15px;
    cursor: pointer;
    text-transform: uppercase;
    box-shadow: 1px 1px 2px rgb(223, 223, 223);
    font-size: 1.5rem;
}

.play-wrapper {
    max-width: 1200px;
    margin: auto;
    position: relative;
}

.playfield { 
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    padding: 60px 0 60px;
    height: 100%;
}

.board-wrapper {
    position: relative;
}

.board {
    max-width: 1000px;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 10px;
    width: fit-content;
    background-color: grey;
}

.cell {
    background-color: white;
    width: var(--cell-dimension);
    height: var(--cell-dimension);
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 6rem;
    transition: all 0.1s;
}

.crossline {
    position: absolute;
    background-color: red;
    height: 10px;
    width: 100%;
    top: 0;
    transition: opacity 0.1s;
    opacity: 1;
    z-index: 1
}

.crossline.hidden {
    opacity: 0;
    z-index: -1
}

.crossline.row-1 {
    top: calc(100% / 3 / 2 - var(--crossline-height));
}

.crossline.row-2 {
    top: calc((100% / 3 / 2 - var(--crossline-height) / 5) * 3);
}

.crossline.row-3 {
    top: calc((100% / 3 / 2) * 5 - var(--crossline-height) / 5);
}

.crossline.col {
    transform: rotate(90deg);
    top: calc(100% / 2 - var(--crossline-height) / 2);
}

.crossline.col-1 {
    left: calc(-100% / 3  - var(--crossline-height) / 4);
}

.crossline.col-3 {
    left: calc(100% / 3  + var(--crossline-height) / 4);
}

.crossline.diag {
    top: calc(50% - var(--crossline-height) / 2);
    width: calc(100% * var(--sqrt--2));
    left: -20%;
}

.crossline.diag-1 {
    transform: rotate(45deg);
}

.crossline.diag-2 {
    transform: rotate(-45deg);
}

.cell.active {
    cursor: pointer;
}

.cell.active:active {
    background-color: rgb(248, 248, 248);
}

.scoretable {
    padding: 8px;
    font-size: 1.5rem;
    position: absolute;
    text-align: left;
    top: 60px;
    right: 5px;
    box-shadow: 1px 1px 2px rgb(209, 209, 209);
    border-spacing: 0px;
}

.scoretable tr {
    padding: 0 5px 0 5px;
    min-width: 180px;
}

.table-header, .player-one-row, .player-two-row {
    display: flex;
    justify-content: space-between;
}

.table-header th {
    font-size: 1.2rem;
    font-weight: 400;
}

th.score {
    text-align: right;
}

.player-one-row, .player-two-row {
    transition: all 0.1s; 
    gap: 3px;
}

.current-player {
    background-color:rgb(233, 233, 233);
    border: none;
}

.score {
    text-align: right;
}

.announcer {
    text-align: center;
    font-size: 1.5rem;
    opacity: 0;
    transition: all 0.2s;
}

.announcer.open {
    opacity: 1;
}



@media (max-width: 1020px) {
    :root {
        --cell-dimension: min(30vw, 20vh);
    }
    .scoretable {
        position: static;
    }

    .playfield {
        justify-content: space-evenly;
        gap: 10px;
        padding: 0px 0 50px;
    }
}